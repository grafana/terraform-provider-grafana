---
layout: ""
page_title: "Provider: Grafana"
description: |-
  The Grafana provider provides configuration management resources for Grafana.
---

# Grafana Provider

The Grafana provider provides configuration management resources for
[Grafana](https://grafana.com/).

## Example Usage

### Simple use-case on an already existing Grafana instance

{{ tffile "examples/provider/provider.tf" }}

### Full Grafana Cloud example

{{ .SchemaMarkdown | trimspace }}

## Authentication

One, or many, of the following authentication settings must be set. Each authentication setting allows a subset of resources to be used

### `auth`

This can be a Grafana API key, basic auth `username:password`, or a
[Grafana API key](https://grafana.com/docs/grafana/latest/http_api/create-api-tokens-for-org/).

### `cloud_api_key`

An API key created on the [Grafana Cloud Portal](https://grafana.com/docs/grafana-cloud/cloud-portal/create-api-key/).

### `sm_access_token`

[Synthetic Monitoring](https://grafana.com/docs/grafana-cloud/synthetic-monitoring/)
endpoints require a dedicated access token. You may obtain an access token with its
[Registration API](https://github.com/grafana/synthetic-monitoring-api-go-client/blob/main/docs/API.md#registration-api).

```console
curl \
  -X POST \
  -H 'Content-type: application/json; charset=utf-8' \
  -H "Authorization: Bearer $GRAFANA_CLOUD_API_KEY" \
  -d '{"stackId": <stack-id>, "metricsInstanceId": <metrics-instance-id>, "logsInstanceId": <logs-instance-id>}' \
  "$SM_API_URL/api/v1/register/install"
```

`GRAFANA_CLOUD_API_KEY` is an API key created on the
[Grafana Cloud Portal](https://grafana.com/docs/grafana-cloud/cloud-portal/create-api-key/).
It must have the `MetricsPublisher` role.

`SM_API_URL` is the URL of the Synthetic Monitoring API.
Based on the region of your Grafana Cloud stack, you need to use a different API URL.

Please [see API docs](https://github.com/grafana/synthetic-monitoring-api-go-client/blob/main/docs/API.md#api-url) to find `SM_API_URL` for your region.

`stackId`, `metricsInstanceId`, and `logsInstanceId` may also be obtained on
the portal. First you need to create a Stack by clicking "Add Stack". When it's
created you will be taken to its landing page on the portal. Get your `stackId`
from the URL in your browser:

```http
https://grafana.com/orgs/<org-slug>/stacks/<stack-id>
```

Next, go to "Details" for Prometheus. Again, get `metricsInstanceId` from your URL:

```http
https://grafana.com/orgs/<org-slug>/hosted-metrics/<metrics-instance-id>
```

Finally, go back to your stack page, and go to "Details" for Loki to get
`logsInstanceId`.

```http
https://grafana.com/orgs/<org-slug>/hosted-logs/<logs-instance-id>
```
