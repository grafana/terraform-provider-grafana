name: enforce schema consistency

on:
  pull_request:
    paths:
      - 'internal/**'
      - 'pkg/**'
      - 'go.mod'
      - 'go.sum'

jobs:
  enforce-schema-consistency:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write  # Required for OIDC authentication with Vault
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Get secrets
        uses: grafana/shared-workflows/actions/get-vault-secrets@75804962c1ba608148988c1e2dc35fbb0ee21746
        with:
          repo_secrets: |
            GITHUB_APP_ID=github_app:app-id
            GITHUB_APP_PRIVATE_KEY=github_app:private-key

      - name: Generate github private token
        id: generate_github_token
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2.0.6
        with:
          app-id: ${{ env.GITHUB_APP_ID }}
          private-key: ${{ env.GITHUB_APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: Set up Go
        uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
        with:
          go-version-file: go.mod

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: "1.12.2" # Ensure to use the same in generate_schema.sh

      - name: Generate current schema
        run: |
          go build .
          ./scripts/generate_schema.sh > current_schema.json

      - name: Check for schema changes
        id: schema-check
        run: |
          # Compare with committed schema if it exists
          if [ -f "provider_schema.json" ]; then
            if ! diff -q provider_schema.json current_schema.json > /dev/null; then
              echo "schema_changed=true" >> $GITHUB_OUTPUT
              echo "Schema changes detected!"
            else
              echo "schema_changed=false" >> $GITHUB_OUTPUT
              echo "No schema changes detected."
            fi
          else
            echo "schema_changed=true" >> $GITHUB_OUTPUT
            echo "Required provider_schema.json file not found"
          fi

      - name: Update schema and templates
        if: steps.schema-check.outputs.schema_changed == 'true'
        run: |
          # Update the provider schema
          cp current_schema.json provider_schema.json

          # Update templates
          go run scripts/generate_issue_template.go --update-schema

      - name: Commit and push changes
        if: steps.schema-check.outputs.schema_changed == 'true'
        uses: stefanzweifel/git-auto-commit-action@778341af668090896ca464160c2def5d1d1a3eb0
        with:
          commit_message: |
            chore: update provider schema and issue templates

            Auto-generated by schema consistency workflow
          file_pattern: 'provider_schema.json .github/ISSUE_TEMPLATE/3-bug-report-enhanced.yml'
          commit_user_name: 'terraform-provider-grafana[bot]'
          commit_user_email: 'terraform-provider-grafana[bot]@users.noreply.github.com'
          commit_author: 'terraform-provider-grafana[bot] <terraform-provider-grafana[bot]@users.noreply.github.com>'
        env:
          GITHUB_TOKEN: ${{ steps.generate_github_token.outputs.token }}

      - name: Comment on PR
        if: steps.schema-check.outputs.schema_changed == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ steps.generate_github_token.outputs.token }}
          script: |
            const comment = `## Schema Updated Automatically

            This PR introduced changes that affected the Terraform provider schema. The following files have been automatically updated:

            - \`provider_schema.json\`
            - \`.github/ISSUE_TEMPLATE/3-bug-report-enhanced.yml\`

            The changes have been committed to this PR branch.

            ---
            *This comment was generated automatically by the schema consistency workflow.*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
