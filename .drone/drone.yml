---
kind: pipeline
name: enterprise tests
platform:
  arch: amd64
  os: linux
services:
- environment:
    GF_DATABASE_URL: sqlite3:///var/lib/grafana/grafana.db?cache=private&mode=rwc&_journal_mode=WAL
    GF_ENTERPRISE_LICENSE_TEXT:
      from_secret: grafana-enterprise-license
    GF_SERVER_ROOT_URL: http://grafana:3000
  image: grafana/grafana-enterprise:10.2.0
  name: grafana
steps:
- commands:
  - cp /bin/terraform /drone/terraform-provider-grafana/terraform
  - chmod a+x /drone/terraform-provider-grafana/terraform
  image: hashicorp/terraform
  name: download-terraform
- commands:
  - sleep 5
  - make testacc-enterprise
  environment:
    GRAFANA_AUTH: admin:admin
    GRAFANA_URL: http://grafana:3000
    GRAFANA_VERSION: 10.2.0
    TF_ACC_TERRAFORM_PATH: /drone/terraform-provider-grafana/terraform
  image: golang:1.21
  name: tests
trigger:
  branch:
  - master
  event:
  - pull_request
  - push
type: docker
workspace:
  path: /drone/terraform-provider-grafana
---
kind: pipeline
name: tls proxy tests
platform:
  arch: amd64
  os: linux
services:
- environment:
    GF_DATABASE_URL: sqlite3:///var/lib/grafana/grafana.db?cache=private&mode=rwc&_journal_mode=WAL
    GF_SERVER_ROOT_URL: http://grafana:3000
  image: grafana/grafana:10.2.0
  name: grafana
steps:
- commands:
  - cd /drone/terraform-provider-grafana/testdata && go run . && ls -lah
  depends_on:
  - clone
  image: golang:1.21
  name: generate certs
- command:
  - server
  - --listen=0.0.0.0:3001
  - --target=grafana:3000
  - --unsafe-target
  - --key=/drone/terraform-provider-grafana/testdata/grafana.key
  - --cert=/drone/terraform-provider-grafana/testdata/grafana.crt
  - --cacert=/drone/terraform-provider-grafana/testdata/ca.crt
  - --allow-cn=client
  depends_on:
  - generate certs
  detach: true
  image: squareup/ghostunnel:v1.5.2
  name: mtls-proxy
- commands:
  - cp /bin/terraform /drone/terraform-provider-grafana/terraform
  - chmod a+x /drone/terraform-provider-grafana/terraform
  depends_on:
  - generate certs
  image: hashicorp/terraform
  name: download-terraform
- commands:
  - sleep 5
  - make testacc-oss
  depends_on:
  - generate certs
  environment:
    GRAFANA_AUTH: admin:admin
    GRAFANA_CA_CERT: /drone/terraform-provider-grafana/testdata/ca.crt
    GRAFANA_TLS_CERT: /drone/terraform-provider-grafana/testdata/client.crt
    GRAFANA_TLS_KEY: /drone/terraform-provider-grafana/testdata/client.key
    GRAFANA_URL: https://mtls-proxy:3001
    GRAFANA_VERSION: 10.2.0
    TESTARGS: -run ".*_basic"
    TF_ACC_TERRAFORM_PATH: /drone/terraform-provider-grafana/terraform
  image: golang:1.21
  name: tests
trigger:
  branch:
  - master
  event:
  - pull_request
  - push
type: docker
workspace:
  path: /drone/terraform-provider-grafana
---
kind: pipeline
name: 'oss tests: 10.2.0'
platform:
  arch: amd64
  os: linux
services:
- environment:
    GF_DATABASE_URL: sqlite3:///var/lib/grafana/grafana.db?cache=private&mode=rwc&_journal_mode=WAL
    GF_SERVER_ROOT_URL: http://grafana:3000
  image: grafana/grafana:10.2.0
  name: grafana
steps:
- commands:
  - cp /bin/terraform /drone/terraform-provider-grafana/terraform
  - chmod a+x /drone/terraform-provider-grafana/terraform
  image: hashicorp/terraform
  name: download-terraform
- commands:
  - sleep 5
  - make testacc-oss
  environment:
    GRAFANA_AUTH: admin:admin
    GRAFANA_URL: http://grafana:3000
    GRAFANA_VERSION: 10.2.0
    TF_ACC_TERRAFORM_PATH: /drone/terraform-provider-grafana/terraform
  image: golang:1.21
  name: tests
trigger:
  branch:
  - master
  event:
  - pull_request
  - push
type: docker
workspace:
  path: /drone/terraform-provider-grafana
---
kind: pipeline
name: 'oss tests: 10.1.5'
platform:
  arch: amd64
  os: linux
services:
- environment:
    GF_DATABASE_URL: sqlite3:///var/lib/grafana/grafana.db?cache=private&mode=rwc&_journal_mode=WAL
    GF_SERVER_ROOT_URL: http://grafana:3000
  image: grafana/grafana:10.1.5
  name: grafana
steps:
- commands:
  - cp /bin/terraform /drone/terraform-provider-grafana/terraform
  - chmod a+x /drone/terraform-provider-grafana/terraform
  image: hashicorp/terraform
  name: download-terraform
- commands:
  - sleep 5
  - make testacc-oss
  environment:
    GRAFANA_AUTH: admin:admin
    GRAFANA_URL: http://grafana:3000
    GRAFANA_VERSION: 10.1.5
    TF_ACC_TERRAFORM_PATH: /drone/terraform-provider-grafana/terraform
  image: golang:1.21
  name: tests
trigger:
  branch:
  - master
  event:
  - pull_request
  - push
type: docker
workspace:
  path: /drone/terraform-provider-grafana
---
kind: pipeline
name: 'oss tests: 9.5.13'
platform:
  arch: amd64
  os: linux
services:
- environment:
    GF_DATABASE_URL: sqlite3:///var/lib/grafana/grafana.db?cache=private&mode=rwc&_journal_mode=WAL
    GF_SERVER_ROOT_URL: http://grafana:3000
  image: grafana/grafana:9.5.13
  name: grafana
steps:
- commands:
  - cp /bin/terraform /drone/terraform-provider-grafana/terraform
  - chmod a+x /drone/terraform-provider-grafana/terraform
  image: hashicorp/terraform
  name: download-terraform
- commands:
  - sleep 5
  - make testacc-oss
  environment:
    GRAFANA_AUTH: admin:admin
    GRAFANA_URL: http://grafana:3000
    GRAFANA_VERSION: 9.5.13
    TF_ACC_TERRAFORM_PATH: /drone/terraform-provider-grafana/terraform
  image: golang:1.21
  name: tests
trigger:
  branch:
  - master
  event:
  - pull_request
  - push
type: docker
workspace:
  path: /drone/terraform-provider-grafana
---
kind: pipeline
name: 'oss tests: 8.5.27'
platform:
  arch: amd64
  os: linux
services:
- environment:
    GF_DATABASE_URL: sqlite3:///var/lib/grafana/grafana.db?cache=private&mode=rwc&_journal_mode=WAL
    GF_SERVER_ROOT_URL: http://grafana:3000
  image: grafana/grafana:8.5.27
  name: grafana
steps:
- commands:
  - cp /bin/terraform /drone/terraform-provider-grafana/terraform
  - chmod a+x /drone/terraform-provider-grafana/terraform
  image: hashicorp/terraform
  name: download-terraform
- commands:
  - sleep 5
  - make testacc-oss
  environment:
    GRAFANA_AUTH: admin:admin
    GRAFANA_URL: http://grafana:3000
    GRAFANA_VERSION: 8.5.27
    TF_ACC_TERRAFORM_PATH: /drone/terraform-provider-grafana/terraform
  image: golang:1.21
  name: tests
trigger:
  branch:
  - master
  event:
  - pull_request
  - push
type: docker
workspace:
  path: /drone/terraform-provider-grafana
---
get:
  name: license.jwt
  path: infra/data/ci/terraform-provider-grafana/enterprise
kind: secret
name: grafana-enterprise-license
---
kind: signature
hmac: b2a4d2fd6fbb38a3ea38005a45cfd6db865fb1e0997e5084e00261d05553a240

...
