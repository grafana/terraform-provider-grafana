---
kind: pipeline
name: lint
platform:
  arch: amd64
  os: linux
services: []
steps:
- commands:
  - golangci-lint --version
  - golangci-lint run ./...
  image: golangci/golangci-lint:v1.49
  name: lint
- commands:
  - |
    terraform fmt -recursive -check || (echo "Terraform files aren't formatted. Run 'terraform fmt -recursive && go generate'"; exit 1;)
  image: hashicorp/terraform
  name: terraform-fmt
trigger:
  branch:
  - master
  event:
  - pull_request
  - push
type: docker
workspace:
  path: /drone/terraform-provider-grafana
---
kind: pipeline
name: docs
platform:
  arch: amd64
  os: linux
services: []
steps:
- commands:
  - apt update && apt install -y jq
  - go generate
  - gitstatus="$(git status --porcelain)"
  - if [ -n "$gitstatus" ]; then
  - '  echo "$gitstatus"'
  - '  echo "docs are out of sync, run \"go generate\""'
  - '  exit 1'
  - fi
  image: golang:1.18
  name: check for drift
- commands:
  - pip3 install linkchecker
  - linkchecker --config ./.linkcheckerrc docs/
  image: python:3.9-alpine
  name: check for broken links
trigger:
  branch:
  - master
  event:
  - pull_request
  - push
type: docker
workspace:
  path: /drone/terraform-provider-grafana
---
kind: pipeline
name: unit tests
platform:
  arch: amd64
  os: linux
services: []
steps:
- commands:
  - cp /bin/terraform /drone/terraform-provider-grafana/terraform
  - chmod a+x /drone/terraform-provider-grafana/terraform
  image: hashicorp/terraform
  name: download-terraform
- commands:
  - go test ./...
  environment:
    TF_ACC_TERRAFORM_PATH: /drone/terraform-provider-grafana/terraform
  image: golang:1.18
  name: tests
trigger:
  branch:
  - master
  event:
  - pull_request
  - push
type: docker
workspace:
  path: /drone/terraform-provider-grafana
---
concurrency:
  limit: 1
kind: pipeline
name: cloud api tests
platform:
  arch: amd64
  os: linux
services: []
steps:
- commands:
  - cp /bin/terraform /drone/terraform-provider-grafana/terraform
  - chmod a+x /drone/terraform-provider-grafana/terraform
  image: hashicorp/terraform
  name: download-terraform
- commands:
  - make testacc-cloud-api
  environment:
    GRAFANA_CLOUD_API_KEY:
      from_secret: grafana-cloud-api-key
    GRAFANA_CLOUD_ORG:
      from_secret: grafana-cloud-org
    TF_ACC_TERRAFORM_PATH: /drone/terraform-provider-grafana/terraform
  image: golang:1.18
  name: tests
trigger:
  event:
  - promote
type: docker
workspace:
  path: /drone/terraform-provider-grafana
---
concurrency:
  limit: 1
kind: pipeline
name: cloud instance tests
platform:
  arch: amd64
  os: linux
services: []
steps:
- commands:
  - cp /bin/terraform /drone/terraform-provider-grafana/terraform
  - chmod a+x /drone/terraform-provider-grafana/terraform
  image: hashicorp/terraform
  name: download-terraform
- commands:
  - .drone/wait-for-instance.sh $${GRAFANA_URL}
  environment:
    GRAFANA_URL:
      from_secret: grafana-cloud-instance-url
  image: golang:1.18
  name: wait for instance
- commands:
  - make testacc-cloud-instance
  environment:
    GRAFANA_AUTH:
      from_secret: grafana-api-token
    GRAFANA_ONCALL_ACCESS_TOKEN:
      from_secret: grafana-oncall-token
    GRAFANA_ORG_ID: 1
    GRAFANA_SM_ACCESS_TOKEN:
      from_secret: grafana-sm-token
    GRAFANA_URL:
      from_secret: grafana-cloud-instance-url
    TF_ACC_TERRAFORM_PATH: /drone/terraform-provider-grafana/terraform
  image: golang:1.18
  name: tests
trigger:
  branch:
  - master
  event:
  - pull_request
  - push
type: docker
workspace:
  path: /drone/terraform-provider-grafana
---
kind: pipeline
name: 'oss tests: 9.2.4'
platform:
  arch: amd64
  os: linux
services:
- environment:
    GF_DATABASE_URL: sqlite3:///var/lib/grafana/grafana.db?cache=private&mode=rwc&_journal_mode=WAL
  image: grafana/grafana:9.2.4
  name: grafana
steps:
- commands:
  - cp /bin/terraform /drone/terraform-provider-grafana/terraform
  - chmod a+x /drone/terraform-provider-grafana/terraform
  image: hashicorp/terraform
  name: download-terraform
- commands:
  - sleep 5
  - make testacc-oss
  environment:
    GRAFANA_AUTH: admin:admin
    GRAFANA_ORG_ID: 1
    GRAFANA_URL: http://grafana:3000
    GRAFANA_VERSION: 9.2.4
    TF_ACC_TERRAFORM_PATH: /drone/terraform-provider-grafana/terraform
  image: golang:1.18
  name: tests
trigger:
  branch:
  - master
  event:
  - pull_request
  - push
type: docker
workspace:
  path: /drone/terraform-provider-grafana
---
kind: pipeline
name: 'oss tests: 9.1.8'
platform:
  arch: amd64
  os: linux
services:
- environment:
    GF_DATABASE_URL: sqlite3:///var/lib/grafana/grafana.db?cache=private&mode=rwc&_journal_mode=WAL
  image: grafana/grafana:9.1.8
  name: grafana
steps:
- commands:
  - cp /bin/terraform /drone/terraform-provider-grafana/terraform
  - chmod a+x /drone/terraform-provider-grafana/terraform
  image: hashicorp/terraform
  name: download-terraform
- commands:
  - sleep 5
  - make testacc-oss
  environment:
    GRAFANA_AUTH: admin:admin
    GRAFANA_ORG_ID: 1
    GRAFANA_URL: http://grafana:3000
    GRAFANA_VERSION: 9.1.8
    TF_ACC_TERRAFORM_PATH: /drone/terraform-provider-grafana/terraform
  image: golang:1.18
  name: tests
trigger:
  branch:
  - master
  event:
  - pull_request
  - push
type: docker
workspace:
  path: /drone/terraform-provider-grafana
---
kind: pipeline
name: 'oss tests: 8.5.15'
platform:
  arch: amd64
  os: linux
services:
- environment:
    GF_DATABASE_URL: sqlite3:///var/lib/grafana/grafana.db?cache=private&mode=rwc&_journal_mode=WAL
  image: grafana/grafana:8.5.15
  name: grafana
steps:
- commands:
  - cp /bin/terraform /drone/terraform-provider-grafana/terraform
  - chmod a+x /drone/terraform-provider-grafana/terraform
  image: hashicorp/terraform
  name: download-terraform
- commands:
  - sleep 5
  - make testacc-oss
  environment:
    GRAFANA_AUTH: admin:admin
    GRAFANA_ORG_ID: 1
    GRAFANA_URL: http://grafana:3000
    GRAFANA_VERSION: 8.5.15
    TF_ACC_TERRAFORM_PATH: /drone/terraform-provider-grafana/terraform
  image: golang:1.18
  name: tests
trigger:
  branch:
  - master
  event:
  - pull_request
  - push
type: docker
workspace:
  path: /drone/terraform-provider-grafana
---
kind: pipeline
name: 'oss tests: 7.5.17'
platform:
  arch: amd64
  os: linux
services:
- environment:
    GF_DATABASE_URL: sqlite3:///var/lib/grafana/grafana.db?cache=private&mode=rwc&_journal_mode=WAL
  image: grafana/grafana:7.5.17
  name: grafana
steps:
- commands:
  - cp /bin/terraform /drone/terraform-provider-grafana/terraform
  - chmod a+x /drone/terraform-provider-grafana/terraform
  image: hashicorp/terraform
  name: download-terraform
- commands:
  - sleep 5
  - make testacc-oss
  environment:
    GRAFANA_AUTH: admin:admin
    GRAFANA_ORG_ID: 1
    GRAFANA_URL: http://grafana:3000
    GRAFANA_VERSION: 7.5.17
    TF_ACC_TERRAFORM_PATH: /drone/terraform-provider-grafana/terraform
  image: golang:1.18
  name: tests
trigger:
  branch:
  - master
  event:
  - pull_request
  - push
type: docker
workspace:
  path: /drone/terraform-provider-grafana
---
get:
  name: api-key
  path: infra/data/ci/terraform-provider-grafana/cloud
kind: secret
name: grafana-api-token
---
get:
  name: cloud-api-key
  path: infra/data/ci/terraform-provider-grafana/cloud
kind: secret
name: grafana-cloud-api-key
---
get:
  name: cloud-instance-url
  path: infra/data/ci/terraform-provider-grafana/cloud
kind: secret
name: grafana-cloud-instance-url
---
get:
  name: cloud-org
  path: infra/data/ci/terraform-provider-grafana/cloud
kind: secret
name: grafana-cloud-org
---
get:
  name: oncall-access-token
  path: infra/data/ci/terraform-provider-grafana/cloud
kind: secret
name: grafana-oncall-token
---
get:
  name: sm-access-token
  path: infra/data/ci/terraform-provider-grafana/cloud
kind: secret
name: grafana-sm-token
---
kind: signature
hmac: 0629906c776d28b768ddb481e5e5b5266b8f7d16475b2555044e087fae552adb

...
